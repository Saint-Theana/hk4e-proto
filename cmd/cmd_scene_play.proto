syntax = "proto3";

package proto;
option go_package = "./;proto";


import "define.proto";

message ScenePlayBattleInfo {
  uint32 mode = 8; //4
  repeated uint32 progress_stage_list = 9; //3
  uint32 start_time = 15; //10
  uint32 duration = 2; //14
  uint32 play_type = 14; //12
  uint32 play_id = 10; //1
  uint32 prepare_end_time = 11; //7
  uint32 progress = 6; //11
  uint32 state = 4; //8
  uint32 type = 1; //9
}

message ScenePlayBattleInfoNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 4355; //4422;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  ScenePlayBattleInfo battle_info = 3; //11
}

message ScenePlayOwnerCheckReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 4405; //4448;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 play_id = 13; //9
  bool is_skip_match = 8; //6
}

message ScenePlayOwnerCheckRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 4437; //4362;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  repeated uint32 param_list = 14; //8
  bool is_skip_match = 7; //1
  uint32 play_id = 8; //9
  uint32 wrong_uid = 6; //5
  int32 retcode = 5; //3
}

message ScenePlayOwnerStartInviteReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 4448; //4385;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  bool is_skip_match = 11; //8
  uint32 play_id = 7; //13
}

message ScenePlayOwnerStartInviteRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 4370; //4357;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  bool is_skip_match = 11; //7
  int32 retcode = 8; //15
  uint32 play_id = 7; //11
}

message ScenePlayOwnerInviteNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 4424; //4371;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 invite_cd = 3; //14
  uint32 play_id = 10; //5
  bool is_remain_reward = 13; //15
}

message ScenePlayGuestReplyInviteReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 4430; //4353;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  bool is_agree = 1; //15
  uint32 play_id = 9; //6
}

message ScenePlayGuestReplyInviteRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 4420; //4440;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  int32 retcode = 7; //6
  bool is_agree = 1; //2
  uint32 play_id = 6; //8
}

message ScenePlayGuestReplyNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 4412; //4423;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 play_id = 12; //13
  uint32 guest_uid = 15; //12
  bool is_agree = 10; //3
}

message ScenePlayInviteResultNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 4364; //4449;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  bool is_all_argee = 4; //11
  uint32 play_id = 10; //15
}

message ScenePlayInfo {
  uint32 entry_id = 1; //15
  uint32 play_id = 8; //11
  uint32 play_type = 12; //3
  bool is_open = 2; //9
}

message ScenePlayInfoListNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 4374; //4381;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  repeated ScenePlayInfo play_info_list = 9; //6
}

message ScenePlayBattleInterruptNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 4379; //4425;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 interrupt_state = 12; //6
  uint32 play_id = 14; //5
  uint32 play_type = 4; //1
}

message ScenePlayBattleSettlePlayerInfo {
  repeated ExhibitionDisplayInfo card_list = 1; //14
  ProfilePicture profile_picture = 13; //10
  uint32 head_image = 4; //11
  uint32 statistic_id = 3; //4
  uint32 uid = 6; //1
  int64 param = 12; //5
  string online_id = 11; //12
  string nickname = 9; //15
}

message ScenePlayBattleSettleRewardInfo {
  repeated ItemParam reward_item_list = 5; //4
  uint32 uid = 8; //3
}

message ScenePlayBattleResultNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 4428; //4398;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  bool is_win = 12; //1
  uint32 cost_time = 8; //7
  uint32 play_type = 13; //15
  uint32 play_id = 2; //11
  repeated ScenePlayBattleSettlePlayerInfo settle_player_info_list = 4; //4
  repeated ScenePlayBattleSettleRewardInfo settle_reward_info_list = 9; //14
}

message ScenePlayBattleUidOpNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 4366; //4447;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 op = 13; //7
  repeated uint32 param_target_list = 9; //9
  uint32 entity_id = 4; //2
  string param_str = 12; //3
  repeated uint32 uid_list = 1; //6
  uint32 param_index = 7; //11
  uint32 play_type = 5; //8
  uint32 param_duration = 8; //12
  repeated uint32 param_list = 2; //15
  uint32 play_id = 11; //5
}

message ScenePlayBattleInfoListNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 4363; //4431;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  repeated ScenePlayBattleInfo battle_info_list = 13; //12
}

message ScenePlayOutofRegionNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 4419; //4355;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 play_id = 5; //13
}

enum ScenePlayBattleState {
  SCENE_PLAY_BATTLE_NONE = 0;
  SCENE_PLAY_BATTLE_INIT = 1;
  SCENE_PLAY_BATTLE_PREPARE = 2;
  SCENE_PLAY_BATTLE_READY = 3;
  SCENE_PLAY_BATTLE_PRESTART = 4;
  SCENE_PLAY_BATTLE_START = 5;
  SCENE_PLAY_BATTLE_STOP = 6;
}

