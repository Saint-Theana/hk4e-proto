syntax = "proto3";

package proto;
option go_package = "./;proto";


import "define.proto";

message UnlockAvatarTalentReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 1005; //1072;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 talent_id = 9; //13
  uint64 avatar_guid = 1; //3
}

message UnlockAvatarTalentRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 1055; //1098;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 talent_id = 2; //2
  int32 retcode = 1; //3
  uint64 avatar_guid = 13; //10
}

message AvatarUnlockTalentNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 1087; //1012;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 entity_id = 14; //14
  uint64 avatar_guid = 12; //13
  uint32 talent_id = 10; //10
  uint32 skill_depot_id = 15; //1
}

message AvatarSkillDepotChangeNotify {


  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 1098; //1035;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 skill_depot_id = 8; //15
  map<uint32, uint32> proud_skill_extra_level_map = 4; //14
  repeated uint32 talent_id_list = 14; //9
  repeated uint32 proud_skill_list = 11; //4
  uint32 core_proud_skill_level = 10; //2
  uint32 entity_id = 3; //7
  uint64 avatar_guid = 12; //12
  map<uint32, uint32> skill_level_map = 13; //3
}

message BigTalentPointConvertReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 1020; //1007;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  repeated uint64 item_guid_list = 5; //6
  uint64 avatar_guid = 3; //3
}

message BigTalentPointConvertRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 1074; //1021;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  int32 retcode = 14; //1
  uint64 avatar_guid = 12; //8
}

message AvatarSkillMaxChargeCountNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 1080; //1003;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 skill_id = 3; //6
  uint32 max_charge_count = 1; //11
  uint64 avatar_guid = 7; //7
}

message AvatarSkillInfoNotify {

  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 1070; //1090;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  map<uint32, AvatarSkillInfo> skill_map = 2; //11
  uint64 guid = 4; //4
}

message ProudSkillUpgradeReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 1062; //1073;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint64 avatar_guid = 2; //5
  uint32 old_proud_skill_level = 6; //4
  uint32 proud_skill_id = 8; //14
}

message ProudSkillUpgradeRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 1014; //1099;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint64 avatar_guid = 11; //6
  uint32 proud_skill_id = 8; //10
  int32 retcode = 5; //15
}

message ProudSkillChangeNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 1024; //1031;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint64 avatar_guid = 6; //11
  uint32 entity_id = 14; //4
  uint32 skill_depot_id = 15; //8
  repeated uint32 proud_skill_list = 10; //12
}

message AvatarSkillUpgradeReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 1029; //1075;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint64 avatar_guid = 2; //7
  uint32 old_level = 12; //3
  uint32 avatar_skill_id = 10; //4
}

message AvatarSkillUpgradeRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 1078; //1048;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint64 avatar_guid = 7; //11
  uint32 cur_level = 2; //14
  uint32 avatar_skill_id = 15; //9
  uint32 old_level = 1; //3
  int32 retcode = 5; //4
}

message AvatarSkillChangeNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 1016; //1097;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 cur_level = 2; //11
  uint64 avatar_guid = 4; //2
  uint32 entity_id = 12; //7
  uint32 skill_depot_id = 5; //13
  uint32 old_level = 6; //1
  uint32 avatar_skill_id = 1; //6
}

message ProudSkillExtraLevelNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 1013; //1081;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 talent_type = 5; //11
  uint32 talent_index = 4; //8
  uint64 avatar_guid = 2; //15
  uint32 extra_level = 13; //3
}

message CanUseSkillNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 1069; //1005;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  bool is_can_use_skill = 2; //2
}

message AvatarTeamResonanceInfo {
  repeated uint32 add_team_resonance_id_list = 2; //5
  uint32 entity_id = 15; //11
  uint64 avatar_guid = 10; //3
  repeated uint32 del_team_resonance_id_list = 8; //14
}

message TeamResonanceChangeNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 1006; //1082;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  repeated AvatarTeamResonanceInfo info_list = 3; //1
}

