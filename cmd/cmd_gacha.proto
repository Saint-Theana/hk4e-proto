syntax = "proto3";

package proto;
option go_package = "./;proto";


import "define.proto";

message GetGachaInfoReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 1505; //1572;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

}

message GachaUpInfo {
  uint32 item_parent_type = 15; //7
  repeated uint32 item_id_list = 11; //15
}

message GachaInfo {
  uint32 ten_cost_item_id = 13; //2
  uint32 end_time = 3; //14
  repeated uint32 display_up4_item_list = 279; //1875
  uint32 cur_schedule_daily_gacha_times = 48; //469
  repeated GachaUpInfo gacha_up_info_list = 1836; //1233
  string gacha_prob_url = 5; //8
  string gacha_prefab_path = 9; //15
  uint32 wish_item_id = 309; //1637
  uint32 begin_time = 15; //1
  uint32 wish_max_progress = 1669; //1222
  uint32 schedule_id = 2; //10
  string gacha_prob_url_oversea = 765; //1481
  uint32 gacha_type = 1; //13
  uint32 left_gacha_times = 11; //5
  repeated uint32 display_up5_item_list = 1851; //2006
  uint32 gacha_times_limit = 12; //11
  uint32 cost_item_num = 14; //3
  bool is_new_wish = 869; //733
  uint32 cost_item_id = 4; //9
  uint32 ten_cost_item_num = 10; //6
  string gacha_preview_prefab_path = 8; //4
  uint32 wish_progress = 246; //1819
  string title_textmap = 1228; //736
  string gacha_record_url_oversea = 1004; //1854
  uint32 gacha_sort_id = 6; //7
  string gacha_record_url = 7; //12
}

message GetGachaInfoRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 1555; //1598;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  bool is_under_general_restrict = 11; //6
  uint32 gacha_random = 6; //9
  int32 retcode = 14; //10
  bool is_under_minors_restrict = 13; //2
  uint32 daily_gacha_times = 1; //5
  repeated GachaInfo gacha_info_list = 3; //13
}

message DoGachaReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 1587; //1512;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 gacha_times = 10; //10
  uint32 gacha_schedule_id = 3; //7
  uint32 gacha_type = 2; //14
  uint32 gacha_random = 12; //13
  string gacha_tag = 15; //4
}

message GachaTransferItem {
  ItemParam item = 5; //3
  bool is_transfer_item_new = 3; //1
}

message GachaItem {
  ItemParam gacha_item = 4; //7
  bool is_gacha_item_new = 9; //6
  bool is_flash_card = 11; //8
  repeated ItemParam token_item_list = 12; //9
  repeated GachaTransferItem transfer_items = 10; //12
}

message DoGachaRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 1598; //1535;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 cur_schedule_daily_gacha_times = 475; //155
  uint32 cost_item_num = 8; //10
  uint32 wish_max_progress = 1; //9
  uint32 wish_item_id = 10; //8
  int32 retcode = 14; //13
  uint32 ten_cost_item_num = 11; //3
  uint32 wish_progress = 12; //2
  repeated GachaItem gacha_item_list = 3; //15
  uint32 ten_cost_item_id = 6; //7
  uint32 gacha_times = 15; //4
  bool is_under_minors_restrict = 1849; //1435
  bool is_under_general_restrict = 397; //1868
  uint32 gacha_type = 13; //12
  uint32 gacha_times_limit = 7; //1
  uint32 cost_item_id = 5; //14
  uint32 daily_gacha_times = 112; //1240
  uint32 left_gacha_times = 4; //6
  uint32 new_gacha_random = 9; //11
  uint32 gacha_schedule_id = 2; //5
}

message GachaWishReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 1520; //1507;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 gacha_schedule_id = 10; //14
  uint32 gacha_type = 6; //13
  uint32 item_id = 9; //4
}

message GachaWishRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 1574; //1521;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 gacha_type = 6; //8
  uint32 gacha_schedule_id = 11; //7
  uint32 wish_max_progress = 7; //2
  uint32 wish_progress = 3; //5
  uint32 wish_item_id = 5; //3
  int32 retcode = 9; //14
}

message GachaOpenWishNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 1580; //1503;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 gacha_type = 1; //2
  uint32 gacha_schedule_id = 13; //9
}

message GachaSimpleInfoNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 1570; //1590;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  bool is_new = 8; //5
}

