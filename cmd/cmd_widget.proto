syntax = "proto3";

package proto;
option go_package = "./;proto";


import "define.proto";

message AnchorPointData {
  uint32 scene_id = 15; //5
  uint32 anchor_point_id = 11; //9
  uint32 end_time = 10; //8
  Vector pos = 12; //15
  Vector rot = 13; //2
}

message AnchorPointDataNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 4288; //4276;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  repeated AnchorPointData anchor_point_list = 11; //10
  uint32 next_usable_time = 10; //14
}

message AnchorPointOpReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 4291; //4257;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  enum AnchorPointOpType {
    ANCHOR_POINT_OP_NONE = 0;
    ANCHOR_POINT_OP_TELEPORT = 1;
    ANCHOR_POINT_OP_REMOVE = 2;
  }

  uint32 anchor_point_id = 15; //9
  uint32 anchor_point_op_type = 3; //12
}

message AnchorPointOpRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 4269; //4252;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  int32 retcode = 4; //5
  uint32 anchor_point_id = 3; //12
  uint32 anchor_point_op_type = 11; //4
}

message LunchBoxData {

  map<uint32, uint32> slot_material_map = 6; //3
}

message SetUpLunchBoxWidgetReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 4285; //4272;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  LunchBoxData lunch_box_data = 14; //6
}

message SetUpLunchBoxWidgetRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 4266; //4294;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  LunchBoxData lunch_box_data = 15; //3
  int32 retcode = 3; //13
}

message OneoffGatherPointDetectorData {
  Vector hint_center_pos = 3; //7
  uint32 hint_radius = 5; //14
  uint32 material_id = 10; //10
  uint32 config_id = 9; //6
  uint32 group_id = 14; //13
  bool is_all_collected = 13; //4
  bool is_hint_valid = 2; //15
}

message ClientCollectorData {
  uint32 material_id = 13; //10
  uint32 max_points = 8; //8
  uint32 curr_points = 2; //13
}

message TreasureMapDetectorData {
  uint32 region_id = 6; //4
  Vector center_pos = 8; //7
  bool is_region_detected = 12; //6
  repeated Vector spot_list = 15; //10
  uint32 radius = 7; //14
}

message SkyCrystalDetectorData {
  bool is_hint_valid = 3; //3
  Vector hint_center_pos = 6; //8
  uint32 group_id = 14; //6
  uint32 config_id = 8; //9
}

message SkyCrystalDetectorQuickUseResult {
  SkyCrystalDetectorData sky_crystal_detector_data = 14; //9
  int32 retcode = 7; //8
}

message WeatherWizardData {
  uint32 shield_value = 14; //13
}

message WidgetCameraInfo {
  uint32 target_entity_id = 6; //4
}

message WidgetThunderBirdFeatherInfo {
  repeated uint32 entity_id_list = 12; //4
}

message QuickUseWidgetReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 4275; //4299;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  oneof param {
    WidgetCreateLocationInfo location_info = 1542; //676
    WidgetCameraInfo camera_info = 1754; //478
    WidgetCreatorInfo creator_info = 825; //812
    WidgetThunderBirdFeatherInfo thunder_bird_feather_info = 1365; //1859
  }
}

message QuickUseWidgetRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 4252; //4270;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 material_id = 6; //6
  int32 retcode = 8; //5
  oneof param {
    OneoffGatherPointDetectorData detector_data = 1; //3
    ClientCollectorData client_collector_data = 7; //15
    SkyCrystalDetectorQuickUseResult sky_crystal_detector_quick_use_result = 139827; //168922
  }
}

message WidgetCoolDownData {
  bool is_success = 12; //5
  uint64 cool_down_time = 15; //4
  uint32 id = 8; //15
}

message WidgetCoolDownNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 4290; //4295;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  repeated WidgetCoolDownData normal_cool_down_data_list = 15; //1
  repeated WidgetCoolDownData group_cool_down_data_list = 10; //12
}

message WidgetReportReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 4287; //4291;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 weather_wizard_shield_value = 12; //7
  bool is_clear_sky_crystal_hint = 9; //5
  uint32 material_id = 5; //15
  bool is_client_collect = 7; //14
  bool is_clear_hint = 15; //13
}

message WidgetReportRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 4264; //4292;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  int32 retcode = 4; //14
  uint32 material_id = 6; //4
}

message ClientCollectorDataNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 4292; //4264;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  repeated ClientCollectorData client_collector_data_list = 9; //13
}

message OneoffGatherPointDetectorDataNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 4257; //4297;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  repeated OneoffGatherPointDetectorData oneoff_gather_point_detector_data_list = 10; //3
}

message SkyCrystalDetectorDataUpdateNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 4265; //4287;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  SkyCrystalDetectorData sky_crystal_detector_data = 12; //9
}

message TreasureMapDetectorDataNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 4298; //4300;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  TreasureMapDetectorData data = 6; //2
}

message WidgetSlotData {
  uint32 cd_over_time = 2; //9
  WidgetSlotTag tag = 8; //14
  uint32 material_id = 11; //11
  bool is_active = 12; //12
}

message SetWidgetSlotReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 4299; //4259;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  repeated WidgetSlotTag tag_list = 13; //15
  uint32 material_id = 4; //6
  WidgetSlotOp op = 3; //2
}

message SetWidgetSlotRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 4284; //4277;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  repeated WidgetSlotTag tag_list = 7; //15
  int32 retcode = 5; //6
  uint32 material_id = 12; //1
  WidgetSlotOp op = 9; //4
}

message WidgetSlotChangeNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 4283; //4267;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  WidgetSlotOp op = 14; //11
  WidgetSlotData slot = 2; //8
}

message GetWidgetSlotReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 4277; //4253;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

}

message GetWidgetSlotRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 4263; //4254;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  repeated WidgetSlotData slot_list = 13; //13
  int32 retcode = 15; //9
}

message AllWidgetDataNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 4286; //4271;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  WeatherWizardData weather_wizard_data = 13; //5
  repeated OneoffGatherPointDetectorData oneoff_gather_point_detector_data_list = 8; //15
  repeated WidgetCoolDownData normal_cool_down_data_list = 4; //9
  LunchBoxData lunch_box_data = 1; //1
  SkyCrystalDetectorData sky_crystal_detector_data = 2; //12
  repeated ClientCollectorData client_collector_data_list = 7; //4
  repeated AnchorPointData anchor_point_list = 11; //3
  repeated WidgetCoolDownData cool_down_group_data_list = 6; //13
  uint32 next_anchor_point_usable_time = 15; //10
  repeated WidgetSlotData slot_list = 14; //6
  repeated uint32 background_active_widget_list = 5; //11
}

message UseWidgetCreateGadgetReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 4300; //4293;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  Vector pos = 2; //15
  Vector rot = 9; //12
  uint32 material_id = 7; //4
}

message UseWidgetCreateGadgetRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 4267; //4290;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  int32 retcode = 4; //15
  uint32 material_id = 13; //12
}

message UseWidgetRetractGadgetReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 4251; //4286;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 entity_id = 15; //3
}

message UseWidgetRetractGadgetRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 4289; //4261;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  int32 retcode = 11; //6
  uint32 entity_id = 4; //14
}

message WidgetGadgetData {
  repeated uint32 gadget_entity_id_list = 15; //1
  uint32 gadget_id = 9; //8
}

message WidgetGadgetAllDataNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 4259; //4284;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  repeated WidgetGadgetData widget_gadget_data = 4; //13
}

message WidgetGadgetDataNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 4282; //4266;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  WidgetGadgetData widget_gadget_data = 10; //12
}

message WidgetGadgetDestroyNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 4254; //4274;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 entity_id = 3; //15
}

message WidgetCreateLocationInfo {
  Vector rot = 2; //3
  Vector pos = 3; //10
}

message WidgetCreatorInfo {
  WidgetCreatorOpType op_type = 5; //10
  uint32 entity_id = 9; //1
  WidgetCreateLocationInfo location_info = 12; //12
}

message WidgetDoBagReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 4255; //4255;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 material_id = 12; //9
  oneof op_info {
    WidgetCreateLocationInfo location_info = 135; //832
    WidgetCreatorInfo widget_creator_info = 362; //1497
  }
}

message WidgetDoBagRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 4258; //4296;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  int32 retcode = 1; //10
  uint32 material_id = 6; //3
}

message WidgetActiveChangeNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 4278; //4280;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  repeated WidgetSlotData widget_data_list = 13; //5
}

message WidgetUseAttachAbilityGroupChangeNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 4270; //4258;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  bool is_attach = 1; //6
  uint32 material_id = 13; //11
}

message WidgetCaptureAnimalReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 4273; //4256;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  Vector pos = 5; //10
  uint32 entity_id = 11; //15
  uint32 material_id = 8; //6
}

message WidgetCaptureAnimalRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 4271; //4289;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  int32 retcode = 3; //9
  uint32 entity_id = 11; //4
  uint32 material_id = 10; //8
  Vector pos = 12; //10
}

message WidgetUpdateExtraCDReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 5973; //5960;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 material_id = 11; //14
  WIDGET_EXTRA_CD_TYPE extra_cd_type = 9; //10
  uint32 cd_group = 7; //7
}

message WidgetUpdateExtraCDRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 5908; //6056;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  int32 retcode = 13; //14
  uint32 material_id = 12; //11
  WIDGET_EXTRA_CD_TYPE extra_cd_type = 4; //6
  WidgetCoolDownData cool_data = 6; //10
  uint32 cd_group = 3; //15
}

message FireworksReformParam {
  FireworksReformParamType type = 11; //8
  int32 value = 8; //4
}

message FireworksReformData {
  uint32 id = 7; //13
  repeated FireworksReformParam reform_param_list = 2; //10
}

message FireworksReformDataNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 6001; //6033;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  repeated FireworksReformData fireworks_reform_data_list = 7; //6
}

message ReformFireworksReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 5941; //6036;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  FireworksReformData fireworks_reform_data = 8; //3
}

message ReformFireworksRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 6008; //5929;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  int32 retcode = 15; //8
}

message FireworksLaunchParam {
  int32 value = 14; //5
  FireworksLaunchParamType type = 5; //4
}

message FireworksLaunchSchemeData {
  uint32 scheme_id = 2; //3
  repeated uint32 fireworks_id_list = 1; //2
  repeated FireworksLaunchParam launch_param_list = 13; //7
}

message LaunchFireworksReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 5921; //6090;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  FireworksLaunchSchemeData scheme_data = 1; //13
}

message LaunchFireworksRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 5952; //6057;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  int32 retcode = 9; //6
}

message FireworksLaunchDataNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 5979; //5928;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  repeated FireworksLaunchSchemeData scheme_data_list = 2; //12
  uint32 last_use_scheme_id = 6; //4
}

message ChangeWidgetBackgroundActiveStateReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 6092; //5907;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  bool is_active = 9; //15
  uint32 material_id = 8; //3
}

message ChangeWidgetBackgroundActiveStateRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 6088; //6060;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  int32 retcode = 7; //8
  uint32 material_id = 13; //6
}

message AllWidgetBackgroundActiveStateNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 6011; //6092;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  repeated uint32 background_active_widget_list = 11; //3
}

message PlayerWidgetInfo {
  uint32 uid = 10; //14
  repeated WidgetSlotData slot_list = 15; //13
}

message RemotePlayerWidgetNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 5996; //5995;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  repeated PlayerWidgetInfo player_widget_info_list = 8; //3
}

message WidgetWeatherWizardDataNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 5947; //5942;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 shield_value = 15; //15
}

enum LunchBoxSlotType {
  LUNCH_BOX_SLOT_NONE = 0;
  LUNCH_BOX_SLOT_REVIVE = 1;
  LUNCH_BOX_SLOT_HEAL = 2;
}

enum WidgetSlotTag {
  WIDGET_SLOT_QUICK_USE = 0;
  WIDGET_SLOT_ATTACH_AVATAR = 1;
}

enum WidgetSlotOp {
  WIDGET_SLOT_OP_ATTACH = 0;
  WIDGET_SLOT_OP_DETACH = 1;
}

enum WidgetCreatorOpType {
  WIDGET_CREATOR_TYPE_NONE = 0;
  WIDGET_CREATOR_TYPE_RETRACT = 1;
  WIDGET_CREATOR_TYPE_RETRACT_AND_CREATE = 2;
}

enum WIDGET_EXTRA_CD_TYPE {
  WIDGET_EXTRA_CD_TYPE_NONE = 0;
  WIDGET_EXTRA_CD_TYPE_E_SKILL_SHARED = 1;
}

enum FireworksReformParamType {
  FIREWORKS_REFORM_PARAM_NONE = 0;
  FIREWORKS_REFORM_PARAM_COLOR = 1;
  FIREWORKS_REFORM_PARAM_HEIGHT = 2;
  FIREWORKS_REFORM_PARAM_SIZE = 3;
  FIREWORKS_REFORM_PARAM_DENSITY = 4;
  FIREWORKS_REFORM_PARAM_ROTATION = 5;
}

enum FireworksLaunchParamType {
  FIREWORKS_LAUNCH_PARAM_NONE = 0;
  FIREWORKS_LAUNCH_PARAM_REPEAT = 1;
  FIREWORKS_LAUNCH_PARAM_INTEVAL = 2;
  FIREWORKS_LAUNCH_PARAM_DELAY = 3;
  FIREWORKS_LAUNCH_PARAM_ROUND_INTEVAL = 4;
  FIREWORKS_LAUNCH_PARAM_MAX = 5;
}

