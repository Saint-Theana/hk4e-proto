syntax = "proto3";

package proto;
option go_package = "./;proto";


import "define.proto";
import "cmd/cmd_widget.proto";

message PlayerEnterSceneNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 205; //272;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 prev_scene_id = 4; //6
  uint32 dungeon_id = 11; //12
  bool is_skip_ui = 317; //1732
  uint32 scene_id = 3; //15
  EnterType type = 9; //13
  uint64 scene_begin_time = 15; //14
  uint32 world_level = 5; //11
  uint32 world_type = 1090; //1490
  uint32 target_uid = 1; //4
  bool is_first_login_enter_scene = 10; //3
  repeated uint32 scene_tag_id_list = 8; //5
  string scene_transaction = 647; //1842
  Vector prev_pos = 12; //8
  uint32 enter_reason = 74; //1828
  Vector pos = 13; //7
  uint32 enter_scene_token = 2; //2
}

message LeaveSceneReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 255; //298;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

}

message LeaveSceneRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 287; //212;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  int32 retcode = 7; //3
}

message SceneInitFinishReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 298; //235;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 enter_scene_token = 10; //11
}

message SceneInitFinishRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 220; //207;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  int32 retcode = 8; //13
  uint32 enter_scene_token = 9; //8
}

message SceneEntityAppearNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 274; //221;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  VisionType appear_type = 3; //15
  uint32 param = 14; //9
  repeated SceneEntityInfo entity_list = 10; //5
}

message SceneEntityDisappearNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 280; //203;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 param = 10; //6
  repeated uint32 entity_list = 13; //1
  VisionType disappear_type = 7; //2
}

message SceneEntityMoveReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 270; //290;
    ENET_CHANNEL_ID = 1;
    ENET_IS_RELIABLE = 0;
    IS_ALLOW_CLIENT = 1;
  }

  MotionInfo motion_info = 5; //7
  uint32 scene_time = 14; //4
  uint32 entity_id = 1; //8
  uint32 reliable_seq = 3; //15
}

message SceneEntityMoveRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 262; //273;
    ENET_CHANNEL_ID = 1;
    ENET_IS_RELIABLE = 1;
  }

  uint32 entity_id = 10; //4
  MotionInfo fail_motion = 6; //1
  uint32 scene_time = 4; //10
  uint32 reliable_seq = 11; //6
  int32 retcode = 15; //8
}

message SceneAvatarStaminaStepReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 214; //299;
    ENET_CHANNEL_ID = 1;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  bool use_client_rot = 9; //15
  Vector rot = 4; //7
}

message SceneAvatarStaminaStepRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 224; //231;
    ENET_CHANNEL_ID = 1;
    ENET_IS_RELIABLE = 1;
  }

  bool use_client_rot = 3; //9
  int32 retcode = 8; //7
  Vector rot = 6; //11
}

message SceneEntityMoveNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 229; //275;
    ENET_CHANNEL_ID = 1;
    ENET_IS_RELIABLE = 1;
  }

  MotionInfo motion_info = 14; //6
  uint32 entity_id = 1; //8
  uint32 scene_time = 7; //15
  uint32 reliable_seq = 12; //2
}

message VehicleLocationInfo {
  Vector rot = 14; //14
  uint32 entity_id = 2; //15
  float cur_hp = 5; //11
  uint32 owner_uid = 9; //5
  Vector pos = 12; //1
  repeated uint32 uid_list = 11; //3
  uint32 gadget_id = 7; //13
  float max_hp = 6; //6
}

message ScenePlayerLocationNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 278; //248;
    ENET_CHANNEL_ID = 1;
    ENET_IS_RELIABLE = 1;
  }

  repeated VehicleLocationInfo vehicle_loc_list = 3; //3
  uint32 scene_id = 1; //9
  repeated PlayerLocationInfo player_loc_list = 12; //14
}

message GetScenePointReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 216; //297;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 belong_uid = 3; //10
  uint32 scene_id = 15; //4
}

message CityInfo {
  uint32 city_id = 6; //15
  uint32 crystal_num = 15; //3
  uint32 level = 11; //4
}

message GetScenePointRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 213; //281;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  repeated uint32 not_explored_dungeon_entry_list = 4; //11
  repeated uint32 to_be_explore_dungeon_entry_list = 13; //15
  repeated uint32 locked_point_list = 7; //2
  repeated uint32 unhide_point_list = 5; //5
  int32 retcode = 2; //9
  uint32 belong_uid = 6; //12
  repeated uint32 unlocked_point_list = 12; //13
  repeated uint32 unlock_area_list = 9; //1
  repeated uint32 hide_point_list = 3; //4
  uint32 scene_id = 14; //14
  repeated uint32 not_interact_dungeon_entry_list = 10; //6
  repeated uint32 group_unlimit_point_list = 1; //10
}

message EnterTransPointRegionNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 269; //205;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 scene_id = 3; //8
  uint32 point_id = 1; //6
}

message ExitTransPointRegionNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 206; //282;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 point_id = 2; //1
  uint32 scene_id = 8; //7
}

message ScenePointUnlockNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 239; //247;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  repeated uint32 point_list = 9; //13
  uint32 scene_id = 12; //6
  repeated uint32 unhide_point_list = 7; //12
  repeated uint32 hide_point_list = 15; //1
  repeated uint32 locked_point_list = 5; //8
}

message SceneTransToPointReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 246; //239;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 scene_id = 3; //13
  uint32 point_id = 10; //1
}

message SceneTransToPointRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 300; //253;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 point_id = 12; //14
  uint32 scene_id = 2; //3
  int32 retcode = 4; //8
}

message EntityJumpNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 292; //222;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  enum Type {
    NULL = 0;
    ACTIVE = 1;
    PASSIVE = 2;
  }

  Type jump_type = 3; //9
  Vector rot = 8; //8
  Vector pos = 5; //10
  uint32 entity_id = 11; //12
}

message GetSceneAreaReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 288; //265;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 scene_id = 6; //4
  uint32 belong_uid = 5; //7
}

message GetSceneAreaRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 225; //204;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  int32 retcode = 6; //7
  repeated CityInfo city_info_list = 14; //13
  uint32 scene_id = 2; //15
  repeated uint32 area_id_list = 11; //9
}

message SceneAreaUnlockNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 258; //293;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  repeated uint32 area_list = 12; //10
  uint32 scene_id = 11; //9
}

message SceneEntityDrownReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 218; //227;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 entity_id = 14; //10
}

message SceneEntityDrownRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 275; //294;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  int32 retcode = 13; //8
  uint32 entity_id = 15; //11
}

message SceneCreateEntityReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 228; //288;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  CreateEntityInfo entity = 9; //1
  bool is_destroy_when_disconnect = 13; //10
  CreateReason reason = 1; //3
}

message SceneCreateEntityRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 273; //226;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  int32 retcode = 1; //14
  uint32 entity_id = 2; //1
  CreateEntityInfo entity = 4; //10
}

message SceneDestroyEntityReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 222; //263;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 entity_id = 9; //7
}

message SceneDestroyEntityRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 245; //295;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  int32 retcode = 10; //14
  uint32 entity_id = 4; //7
}

message SceneForceUnlockNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 285; //206;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  bool is_add = 8; //10
  repeated uint32 force_id_list = 14; //2
}

message SceneForceLockNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 251; //234;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  repeated uint32 force_id_list = 6; //9
}

message EnterWorldAreaReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 242; //250;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 area_type = 11; //8
  uint32 area_id = 1; //1
}

message EnterWorldAreaRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 250; //243;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 area_type = 3; //1
  uint32 area_id = 6; //7
  int32 retcode = 12; //9
}

message EntityForceSyncReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 230; //274;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 room_id = 9; //1
  MotionInfo motion_info = 13; //11
  uint32 entity_id = 8; //13
  uint32 scene_time = 11; //12
}

message EntityForceSyncRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 243; //276;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 scene_time = 2; //14
  uint32 entity_id = 6; //6
  MotionInfo fail_motion = 1; //8
  int32 retcode = 3; //4
}

message GetAreaExplorePointReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 207; //241;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  repeated uint32 area_id_list = 5; //14
}

message GetAreaExplorePointRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 252; //249;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  int32 retcode = 14; //8
  repeated uint32 area_id_list = 13; //11
  repeated uint32 explore_point_list = 3; //4
}

message ClientTransmitReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 203; //291;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 scene_id = 8; //2
  TransmitReason reason = 13; //14
  Vector pos = 12; //1
  Vector rot = 9; //9
}

message ClientTransmitRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 253; //224;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  TransmitReason reason = 12; //3
  int32 retcode = 7; //9
}

message EnterSceneWeatherAreaNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 236; //256;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 weather_gadget_id = 11; //13
}

message ExitSceneWeatherAreaNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 294; //242;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 weather_gadget_id = 15; //2
}

message SceneAreaWeatherNotify {

  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 281; //230;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 weather_area_id = 13; //1
  uint32 weather_gadget_id = 15; //9
  uint32 climate_type = 10; //14
  float trans_duration = 5; //15
  map<uint32, string> weather_value_map = 7; //10
}

message ScenePlayerInfo {
  uint32 scene_id = 4; //10
  uint32 peer_id = 5; //6
  OnlinePlayerInfo online_player_info = 2; //13
  bool is_connected = 7; //2
  string name = 10; //15
  uint32 uid = 13; //8
}

message ScenePlayerInfoNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 264; //267;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  repeated ScenePlayerInfo player_info_list = 11; //5
}

message PlayerLocationInfo {
  uint32 uid = 9; //15
  Vector pos = 4; //3
  Vector rot = 7; //13
}

message PlayerWorldLocationInfo {
  uint32 scene_id = 4; //1
  PlayerLocationInfo player_loc = 1; //12
}

message WorldPlayerLocationNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 283; //258;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  repeated PlayerWorldLocationInfo player_world_loc_list = 3; //8
  repeated PlayerLocationInfo player_loc_list = 4; //15
}

message BeginCameraSceneLookNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 279; //270;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  enum KeepRotType {
    KEEP_ROT_X = 0;
    KEEP_ROT_XY = 1;
  }

  uint32 blend_type = 1965; //1154
  float custom_radius = 11; //7
  bool is_set_screenXY = 8; //5
  Vector look_pos = 13; //4
  bool is_recover_keep_current = 15; //11
  bool is_abs_follow_pos = 644; //1375
  KeepRotType keep_rot_type = 14; //6
  bool is_change_play_mode = 1; //9
  uint32 disable_protect = 106; //1103
  float screen_y = 5; //15
  bool is_set_follow_pos = 4; //13
  bool is_force = 9; //12
  float blend_duration = 2004; //1758
  uint32 entity_id = 167; //1327
  float screen_x = 6; //3
  bool is_force_walk = 2; //10
  repeated string other_params = 12; //1
  Vector follow_pos = 7; //8
  bool is_allow_input = 3; //2
  float duration = 10; //14
}

message EndCameraSceneLookNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 227; //217;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

}

message MarkEntityInMinMapNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 263; //202;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  Vector position = 13; //4
  uint32 monster_id = 12; //7
  uint32 entity_id = 3; //14
}

message UnmarkEntityInMinMapNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 223; //219;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 entity_id = 2; //8
}

message ExecuteGroupTriggerReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 290; //257;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  string source_name = 5; //15
  uint32 target_entity_id = 3; //12
  int32 param2 = 4; //8
  uint32 source_entity_id = 8; //4
  int32 param3 = 2; //10
  int32 param1 = 7; //9
}

message ExecuteGroupTriggerRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 254; //300;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  int32 retcode = 13; //13
}

message LevelupCityReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 295; //216;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 scene_id = 14; //5
  uint32 area_id = 13; //3
  uint32 item_num = 8; //14
}

message LevelupCityRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 267; //287;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 area_id = 12; //9
  int32 retcode = 2; //3
  uint32 scene_id = 3; //4
  CityInfo city_info = 15; //6
}

message RoutePointChangeInfo {
  float wait_time = 15; //6
  float target_velocity = 7; //14
  uint32 point_index = 11; //11
}

message SceneRouteChangeInfo {
  bool is_forward = 7; //12
  uint32 route_id = 6; //15
  uint32 type = 11; //4
  repeated RoutePointChangeInfo point_list = 14; //1
}

message SceneRouteChangeNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 201; //240;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 scene_id = 10; //12
  uint32 scene_time = 6; //11
  repeated SceneRouteChangeInfo route_list = 12; //2
}

message PlatformStartRouteNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 237; //218;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  PlatformInfo platform = 7; //15
  uint32 scene_time = 6; //12
  uint32 entity_id = 2; //8
}

message PlatformStopRouteNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 284; //266;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 scene_time = 3; //9
  uint32 entity_id = 12; //12
  PlatformInfo platform = 6; //8
}

message PlatformChangeRouteNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 211; //268;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 entity_id = 1; //2
  PlatformInfo platform = 6; //1
  uint32 scene_time = 9; //8
}

message ScenePlayerSoundNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 291; //233;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  enum PlaySoundType {
    PLAY_SOUND_NONE = 0;
    PLAY_SOUND_START = 1;
    PLAY_SOUND_STOP = 2;
  }

  string sound_name = 11; //4
  PlaySoundType play_type = 10; //8
  Vector play_pos = 6; //3
}

message PersonalSceneJumpReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 260; //284;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 point_id = 13; //4
}

message PersonalSceneJumpRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 204; //280;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 dest_scene_id = 3; //5
  int32 retcode = 12; //8
  Vector dest_pos = 2; //11
}

message SealBattleBeginNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 261; //289;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 seal_max_progress = 2; //9
  uint32 seal_entity_id = 15; //1
  uint32 seal_radius = 12; //12
  SealBattleType battle_type = 4; //14
}

message SealBattleEndNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 265; //259;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  bool is_win = 13; //4
  uint32 seal_entity_id = 3; //15
}

message SealBattleProgressNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 226; //232;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 seal_entity_id = 7; //9
  uint32 max_progress = 15; //10
  uint32 seal_radius = 8; //4
  uint32 progress = 4; //5
  uint32 end_time = 14; //2
}

message ClientPauseNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 277; //260;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  bool is_open = 10; //1
}

message AvatarEnterSceneInfo {
  repeated ServerBuff server_buff_list = 4; //14
  uint32 avatar_entity_id = 10; //7
  AbilitySyncStateInfo weapon_ability_info = 11; //12
  uint32 weapon_entity_id = 13; //10
  AbilitySyncStateInfo avatar_ability_info = 1; //2
  uint64 avatar_guid = 8; //13
  uint64 weapon_guid = 14; //9
  repeated uint32 buff_id_list = 7; //5
}

message TeamEnterSceneInfo {
  AbilityControlBlock ability_control_block = 12; //7
  AbilitySyncStateInfo team_ability_info = 10; //10
  uint32 team_entity_id = 4; //15
}

message MPLevelEntityInfo {
  AbilitySyncStateInfo ability_info = 2; //2
  uint32 entity_id = 11; //11
  uint32 authority_peer_id = 9; //3
}

message PlayerEnterSceneInfoNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 212; //214;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  TeamEnterSceneInfo team_enter_info = 5; //8
  uint32 enter_scene_token = 13; //12
  repeated AvatarEnterSceneInfo avatar_enter_info = 12; //7
  uint32 cur_avatar_entity_id = 8; //6
  MPLevelEntityInfo mp_level_entity_info = 7; //5
}

message JoinPlayerSceneReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 234; //292;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 target_uid = 1; //12
}

message JoinPlayerSceneRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 289; //220;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  int32 retcode = 6; //10
}

message SceneKickPlayerReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 238; //264;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 target_uid = 2; //6
}

message SceneKickPlayerRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 240; //238;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  int32 retcode = 13; //13
  uint32 target_uid = 3; //10
}

message SceneKickPlayerNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 282; //211;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 target_uid = 15; //8
  uint32 kicker_uid = 8; //9
}

message HitClientTrivialNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 272; //244;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  Vector position = 9; //11
  uint32 owner_entity_id = 4; //12
}

message BackMyWorldReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 231; //286;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

}

message BackMyWorldRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 276; //201;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  int32 retcode = 9; //11
}

message SeeMonsterReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 259; //228;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 monster_id = 9; //7
}

message SeeMonsterRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 249; //251;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  int32 retcode = 3; //9
}

message AddSeenMonsterNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 296; //223;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  repeated uint32 monster_id_list = 1; //12
}

message AllSeenMonsterNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 244; //271;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  repeated uint32 monster_id_list = 2; //4
}

message SceneTimeNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 232; //245;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint64 scene_time = 10; //14
  bool is_paused = 4; //1
  uint32 scene_id = 13; //7
}

message EnterSceneReadyReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 268; //208;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 enter_scene_token = 9; //9
}

message EnterSceneReadyRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 233; //209;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 enter_scene_token = 9; //1
  int32 retcode = 7; //4
}

message EnterScenePeerNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 286; //252;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 dest_scene_id = 8; //12
  uint32 enter_scene_token = 9; //11
  uint32 host_peer_id = 10; //14
  uint32 peer_id = 6; //1
}

message EnterSceneDoneReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 248; //277;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 enter_scene_token = 14; //11
}

message EnterSceneDoneRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 297; //237;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 enter_scene_token = 9; //15
  int32 retcode = 5; //7
}

message WorldPlayerDieNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 202; //285;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  PlayerDieType die_type = 10; //12
  uint32 murderer_entity_id = 8; //15
  oneof entity {
    uint32 monster_id = 1; //8
    uint32 gadget_id = 4; //4
  }
}

message WorldPlayerReviveReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 219; //225;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

}

message WorldPlayerReviveRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 221; //278;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  int32 retcode = 6; //3
}

message JoinPlayerFailNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 271; //236;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  int32 retcode = 15; //11
}

message SetSceneWeatherAreaReq {

  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 208; //254;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 weather_gadget_id = 15; //13
  map<uint32, string> weather_value_map = 6; //4
}

message SetSceneWeatherAreaRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 266; //283;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  int32 retcode = 1; //4
}

message ExecuteGadgetLuaReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 210; //269;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 source_entity_id = 6; //12
  int32 param3 = 8; //1
  int32 param1 = 14; //5
  int32 param2 = 15; //14
}

message ExecuteGadgetLuaRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 209; //210;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  int32 retcode = 13; //12
}

message CutSceneExtraParam {
  repeated double detail_param_list = 3; //1
}

message CutSceneBeginNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 217; //296;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  bool is_wait_others = 3; //9
  uint32 cutscene_id = 2; //14
  repeated CutSceneExtraParam extra_param_list = 14; //3
}

message CutSceneFinishNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 257; //262;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 cutscene_id = 14; //12
}

message CutSceneEndNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 299; //215;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  int32 retcode = 9; //5
  uint32 cutscene_id = 15; //14
}

message ClientScriptEventNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 247; //213;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  repeated int32 param_list = 1; //9
  uint32 source_entity_id = 4; //14
  uint32 event_type = 10; //10
  uint32 target_entity_id = 8; //13
}

message SceneEntitiesMovesReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 241; //279;
    ENET_CHANNEL_ID = 1;
    ENET_IS_RELIABLE = 0;
    IS_ALLOW_CLIENT = 1;
  }

  repeated EntityMoveInfo entity_move_info_list = 8; //14
}

message EntityMoveFailInfo {
  int32 retcode = 3; //12
  uint32 scene_time = 7; //9
  MotionInfo fail_motion = 2; //14
  uint32 reliable_seq = 4; //4
  uint32 entity_id = 6; //10
}

message SceneEntitiesMovesRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 293; //255;
    ENET_CHANNEL_ID = 1;
    ENET_IS_RELIABLE = 0;
  }

  repeated EntityMoveFailInfo entity_move_fail_info_list = 5; //11
}

message SceneEntitiesMoveCombineNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3025; //3387;
    ENET_CHANNEL_ID = 1;
    ENET_IS_RELIABLE = 0;
  }

  repeated EntityMoveInfo entity_move_info_list = 9; //8
}

message UnlockTransPointReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3354; //3035;
    ENET_CHANNEL_ID = 1;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 point_id = 4; //12
  uint32 scene_id = 6; //10
}

message UnlockTransPointRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3057; //3426;
    ENET_CHANNEL_ID = 1;
    ENET_IS_RELIABLE = 1;
  }

  int32 retcode = 3; //12
}

message SceneWeatherForecastReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3406; //3110;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 weather_area_id = 1; //15
}

message SceneWeatherForecastRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3500; //3012;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint64 next_climate_time = 10; //14
  repeated uint32 forcast_climate_list = 13; //2
  int32 retcode = 4; //4
}

message MarkMapReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3176; //3466;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  enum Operation {
    ADD = 0;
    MOD = 1;
    DEL = 2;
    GET = 3;
  }

  MapMarkPoint mark = 10; //8
  MapMarkPoint old = 7; //6
  Operation op = 3; //9
}

message MarkMapRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3413; //3079;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  repeated MapMarkPoint mark_list = 5; //8
  int32 retcode = 1; //11
}

message AllMarkPointNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3284; //3283;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  repeated MapMarkPoint mark_list = 6; //7
}

message WorldDataNotify {

  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3244; //3308;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  enum DataType {
    DATA_NONE = 0;
    WORLD_LEVEL = 1;
    IS_IN_MP_MODE = 2;
  }

  map<uint32, PropValue> world_prop_map = 3; //9
}

message EntityMoveRoomNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3186; //3178;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 entity_id = 2; //11
  uint32 dest_room_id = 5; //9
}

message WorldPlayerInfoNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3125; //3116;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  repeated PlayerWidgetInfo player_widget_info_list = 1; //8
  repeated OnlinePlayerInfo player_info_list = 12; //14
  repeated uint32 player_uid_list = 10; //11
}

message PostEnterSceneReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3212; //3312;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 enter_scene_token = 1; //12
}

message PostEnterSceneRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3303; //3184;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  int32 retcode = 13; //4
  uint32 enter_scene_token = 3; //12
}

message ChatInfo {
  message SystemHint {
    uint32 type = 14; //14
  }

  enum SystemHintType {
    CHAT_NONE = 0;
    CHAT_ENTER_WORLD = 1;
    CHAT_LEAVE_WORLD = 2;
  }

  uint32 time = 11; //13
  uint32 sequence = 2; //10
  uint32 to_uid = 3; //7
  uint32 uid = 15; //15
  bool is_read = 6; //5
  oneof content {
    string text = 1809; //1946
    uint32 icon = 1168; //914
    SystemHint system_hint = 523; //1753
  }
}

message PlayerChatReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3242; //3185;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 channel_id = 5; //13
  ChatInfo chat_info = 12; //15
}

message PlayerChatRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3480; //3228;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 chat_forbidden_endtime = 2; //15
  int32 retcode = 14; //2
}

message PlayerChatNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3092; //3010;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  ChatInfo chat_info = 6; //3
  uint32 channel_id = 14; //6
}

message PlayerChatCDNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3277; //3367;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 over_time = 3; //15
}

message ChatHistoryNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3099; //3496;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  repeated ChatInfo chat_info = 12; //9
  uint32 channel_id = 14; //12
}

message SceneDataNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3295; //3203;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  repeated string level_config_name_list = 6; //15
  repeated uint32 scene_tag_id_list = 8; //8
}

message DungeonEntryToBeExploreNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3446; //3147;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 dungeon_entry_scene_point_id = 6; //2
  uint32 scene_id = 9; //4
  uint32 dungeon_entry_config_id = 4; //10
}

message GetDungeonEntryExploreConditionReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3123; //3165;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 scene_id = 13; //6
  uint32 dungeon_entry_config_id = 5; //2
  uint32 dungeon_entry_scene_point_id = 11; //4
}

message DungeonEntryCond {
  DungeonEntryBlockReason cond_reason = 14; //7
  uint32 param1 = 12; //8
}

message GetDungeonEntryExploreConditionRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3355; //3269;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  DungeonEntryCond dungeon_entry_cond = 7; //5
  int32 retcode = 14; //3
}

message UnfreezeGroupLimitNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3346; //3220;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 point_id = 13; //9
  uint32 scene_id = 10; //11
}

message SetEntityClientDataNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3149; //3146;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 entity_id = 15; //14
  EntityClientData entity_client_data = 13; //9
}

message GroupSuiteNotify {

  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3115; //3257;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  map<uint32, uint32> group_map = 12; //3
}

message GroupUnloadNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3144; //3344;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  repeated uint32 group_list = 6; //10
}

message MonsterAIConfigHashNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3324; //3039;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 job_id = 1; //10
  uint32 entity_id = 7; //15
  int32 hash_value = 9; //11
}

message ShowTemplateReminderNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3353; //3491;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  bool is_revoke = 13; //1
  uint32 template_reminder_id = 9; //14
  repeated uint32 param_uid_list = 6; //3
  repeated int32 param_list = 12; //10
  bool is_need_cache = 11; //15
}

message ShowCommonTipsNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3048; //3352;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  string content = 4; //8
  string title = 8; //13
  uint32 close_time = 7; //4
}

message CloseCommonTipsNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3010; //3194;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

}

message ChangeWorldToSingleModeNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3397; //3006;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

}

message SyncScenePlayTeamEntityNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3227; //3333;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 scene_id = 1; //2
  repeated PlayTeamEntityInfo entity_info_list = 14; //3
}

message DelScenePlayTeamEntityNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3203; //3318;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  repeated uint32 del_entity_id_list = 6; //2
  uint32 scene_id = 9; //4
}

message CylinderRegionSize {
  float radius = 14; //8
  float height = 4; //7
}

message PolygonRegionSize {
  repeated VectorPlane point_list = 15; //5
  float height = 13; //9
}

message PlayerEyePointStateNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3435; //3051;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 region_entity_id = 5; //15
  Vector eye_point_pos = 14; //1
  bool is_use_eye_point = 1; //3
  uint32 region_config_id = 4; //7
  uint32 region_shape = 2; //12
  bool is_filter_stream_pos = 10; //2
  int32 fix_lod_level = 6; //5
  uint32 region_group_id = 11; //4
  oneof region_size {
    float sphere_radius = 152; //255
    Vector cubic_size = 879; //1823
    CylinderRegionSize cylinder_size = 1320; //1862
    PolygonRegionSize polygon_size = 1996; //877
  }
}

message GetMapMarkTipsReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3202; //3463;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

}

message GetMapMarkTipsRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3089; //3327;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  int32 retcode = 12; //7
  repeated MapMarkTipsInfo mark_tips_list = 14; //11
}

message ChangeWorldToSingleModeReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3171; //3066;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

}

message ChangeWorldToSingleModeRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3197; //3282;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 quit_mp_valid_time = 13; //15
  int32 retcode = 3; //4
}

message GetWorldMpInfoReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3269; //3391;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

}

message GetWorldMpInfoRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3320; //3320;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  int32 retcode = 12; //12
  bool is_in_mp_mode = 11; //1
  uint32 quit_mp_valid_time = 15; //9
}

message EntityConfigHashEntry {
  uint32 job_id = 12; //13
  int32 hash_value = 6; //6
  uint32 entity_id = 3; //11
}

message EntityConfigHashNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3265; //3189;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  repeated EntityConfigHashEntry ability_entry_list = 7; //3
  repeated EntityConfigHashEntry avatar_entry_list = 12; //15
  repeated EntityConfigHashEntry combat_entry_list = 1; //8
}

message ForceDragAvatarNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3071; //3235;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 scene_time = 4; //3
  uint64 delta_time_ms = 1; //1
  uint32 entity_id = 8; //2
  MotionInfo motion_info = 11; //10
  bool is_first_valid = 5; //8
  uint64 last_move_time_ms = 14; //12
}

message MonsterPointArrayRouteUpdateNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3271; //3410;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 entity_id = 12; //7
  MonsterRoute monster_route = 2; //5
}

message ForceDragBackTransferNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3032; //3145;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

}

message GetScenePerformanceReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3494; //3419;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

}

message GetScenePerformanceRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3336; //3137;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 monster_num = 11; //9
  uint32 gather_num_insight = 7; //1
  uint32 gadget_num = 12; //6
  int32 retcode = 1; //7
  uint32 dynamic_group_num = 3; //12
  uint32 group_num = 13; //2
  Vector pos = 15; //4
  uint32 entity_num = 10; //8
  uint32 gather_num = 8; //13
}

message SceneAudioNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3132; //3166;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  repeated float param2 = 4; //14
  int32 type = 14; //3
  repeated string param3 = 12; //11
  uint32 source_uid = 5; //6
  repeated uint32 param1 = 9; //4
}

message HitTreeNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3118; //3019;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 tree_type = 5; //11
  Vector tree_pos = 4; //2
  Vector drop_pos = 11; //8
}

message EntityTagChangeNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3442; //3316;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  string tag = 14; //2
  uint32 entity_id = 11; //8
  bool is_add = 1; //10
}

message AvatarFollowRouteNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3097; //3458;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 entity_id = 1; //4
  uint32 template_id = 2; //6
  uint32 start_scene_time_ms = 6; //8
  Route route = 4; //2
  string client_params = 10; //13
}

message SceneEntityUpdateNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3388; //3412;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 param = 2; //10
  VisionType appear_type = 10; //13
  repeated SceneEntityInfo entity_list = 7; //5
}

message ClientHashDebugNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3279; //3086;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 job_id = 2; //12
}

message PlayerWorldSceneInfo {
  uint32 scene_id = 11; //11
  repeated uint32 scene_tag_id_list = 13; //8
  bool is_locked = 5; //12
}

message PlayerWorldSceneInfoListNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3198; //3129;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  repeated PlayerWorldSceneInfo info_list = 5; //5
}

message LuaEnvironmentEffectNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3240; //3408;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 type = 14; //1
  repeated int32 int_param_list = 1; //12
  string effect_alias = 13; //3
  repeated float float_param_list = 12; //14
}

message ClientLoadingCostumeVerificationNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3441; //3487;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 costume_id = 8; //9
  uint64 prefab_hash = 15; //2
  uint64 guid = 13; //14
}

message ShowClientGuideNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3054; //3005;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  string guide_name = 2; //7
}

message ShowClientTutorialNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3381; //3305;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 tutorial_id = 10; //2
}

message GetMapAreaReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3148; //3108;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

}

message GetMapAreaRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3213; //3328;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  int32 retcode = 2; //14
  repeated MapAreaInfo map_area_info_list = 3; //9
}

message MapAreaChangeNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3049; //3378;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  repeated MapAreaInfo map_area_info_list = 10; //3
}

message LeaveWorldNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3445; //3017;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

}

message GuestBeginEnterSceneNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3490; //3031;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 scene_id = 9; //8
  uint32 uid = 4; //15
}

message GuestPostEnterSceneNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3292; //3144;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 scene_id = 12; //5
  uint32 uid = 5; //4
}

message LevelTagDataNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3061; //3314;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  repeated uint32 level_tag_id_list = 11; //9
}

message StopReminderNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3423; //3004;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 reminder_id = 12; //15
}

message AreaPlayInfoNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3069; //3323;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 detail_play_type = 12; //14
  AreaPlayType area_play_type = 9; //11
}

message CheckGroupReplacedReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3329; //3113;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  repeated uint32 group_id_list = 7; //7
}

message CheckGroupReplacedRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3117; //3152;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  int32 retcode = 3; //4
  repeated uint32 replaced_group_id_list = 6; //6
}

message DeathZoneObserveNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3059; //3475;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 target_entity_id = 7; //14
  uint32 source_entity_id = 5; //12
}

message HitTreeInfo {
  Vector tree_pos = 2; //12
  uint32 tree_type = 1; //8
}

message WorldChestOpenNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3085; //3295;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 group_id = 3; //6
  uint32 scene_id = 6; //9
  uint32 config_id = 8; //12
}

message WidgetQuickHitTreeReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3428; //3345;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  repeated HitTreeInfo hit_tree_info_list = 2; //5
}

message WidgetQuickHitTreeRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3359; //3336;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  int32 retcode = 5; //2
}

message BeginCameraSceneLookWithTemplateNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3201; //3160;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  enum FollowType {
    FOLLOW_TYPE_INIT_FOLLOW_POS = 0;
    FOLLOW_TYPE_SET_FOLLOW_POS = 1;
    FOLLOW_TYPE_SET_ABS_FOLLOW_POS = 2;
  }

  Vector look_pos = 4; //8
  uint32 template_id = 9; //5
  Vector follow_pos = 7; //2
  uint32 entity_id = 14; //12
  repeated string other_params = 8; //13
  FollowType follow_type = 3; //9
}

message RefreshEntityAuthNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3280; //3259;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  repeated uint32 entity_id_list = 11; //7
}

message ScenePlayerBackgroundAvatarRefreshNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 3464; //3274;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  repeated SceneEntityInfo entity_list = 14; //4
  VisionType appear_type = 2; //8
  uint32 param = 1; //9
}

enum EnterType {
  ENTER_NONE = 0;
  ENTER_SELF = 1;
  ENTER_GOTO = 2;
  ENTER_JUMP = 3;
  ENTER_OTHER = 4;
  ENTER_BACK = 5;
  ENTER_DUNGEON = 6;
  ENTER_DUNGEON_REPLAY = 7;
  ENTER_GOTO_BY_PORTAL = 8;
  ENTER_SELF_HOME = 9;
  ENTER_OTHER_HOME = 10;
  ENTER_GOTO_RECREATE = 11;
}

enum VisionType {
  VISION_NONE = 0;
  VISION_MEET = 1;
  VISION_REBORN = 2;
  VISION_REPLACE = 3;
  VISION_WAYPOINT_REBORN = 4;
  VISION_MISS = 5;
  VISION_DIE = 6;
  VISION_GATHER_ESCAPE = 7;
  VISION_REFRESH = 8;
  VISION_TRANSPORT = 9;
  VISION_REPLACE_DIE = 10;
  VISION_REPLACE_NO_NOTIFY = 11;
  VISION_BORN = 12;
  VISION_PICKUP = 13;
  VISION_REMOVE = 14;
  VISION_CHANGE_COSTUME = 15;
  VISION_FISH_REFRESH = 16;
  VISION_FISH_BIG_SHOCK = 17;
  VISION_FISH_QTE_SUCC = 18;
  VISION_CAPTURE_DISAPPEAR = 19;
}

enum CreateReason {
  CREATE_NONE = 0;
  CREATE_QUEST = 1;
  CREATE_ENERGY = 2;
}

enum TransmitReason {
  TRANSMIT_NONE = 0;
  TRANSMIT_QUEST = 1;
}

enum SealBattleType {
  SEAL_BATTLE_KEEP_ALIVE = 0;
  SEAL_BATTLE_KILL_MONSTER = 1;
  SEAL_BATTLE_ENERGY_CHARGE = 2;
}

enum DungeonEntryBlockReason {
  DUNGEON_ENTRY_REASON_NONE = 0;
  DUNGEON_ENTRY_REASON_LEVEL = 1;
  DUNGEON_ENTRY_REASON_QUEST = 2;
  DUNGEON_ENTRY_REASON_MULIPLE = 3;
}

enum AreaPlayType {
  AREA_PLAY_NONE = 0;
  AREA_PLAY_CLIMATE = 1;
  AREA_PLAY_REGIONAL_PLAY = 2;
}

