syntax = "proto3";

package proto;
option go_package = "./;proto";


import "define.proto";

message QuestListNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 405; //472;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  repeated Quest quest_list = 13; //1
}

message QuestListUpdateNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 455; //498;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  repeated Quest quest_list = 13; //6
}

message QuestDelNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 487; //412;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 quest_id = 15; //1
}

message ChildQuest {
  uint32 quest_config_id = 10; //8
  uint32 state = 12; //4
  uint32 quest_id = 5; //15
}

message ParentQuestRandomInfo {
  repeated uint32 factor_list = 3; //1
  uint32 template_id = 6; //8
  uint32 entrance_id = 1; //2
}

message InfernceWordInfo {
  uint32 word_id = 5; //8
  bool is_interpret = 7; //15
  bool is_submit = 4; //10
  bool is_associate = 3; //6
  uint32 unlock_by_word_id = 13; //5
}

message InferencePageInfo {
  uint32 page_id = 6; //3
  repeated InfernceWordInfo unlock_word_list = 8; //15
}

message ParentQuest {

  repeated int32 quest_var = 8; //14
  map<uint32, uint32> time_var_map = 12; //8
  uint32 parent_quest_state = 15; //1
  bool is_finished = 9; //7
  repeated InferencePageInfo inference_page_list = 5; //15
  ParentQuestRandomInfo random_info = 7; //12
  uint32 parent_quest_id = 1; //3
  bool is_random = 11; //13
  uint64 video_key = 2; //6
  uint32 quest_var_seq = 4; //11
  repeated ChildQuest child_quest_list = 10; //9
}

message FinishedParentQuestNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 498; //435;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  repeated ParentQuest parent_quest_list = 3; //2
}

message FinishedParentQuestUpdateNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 420; //407;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  repeated ParentQuest parent_quest_list = 15; //9
}

message AddQuestContentProgressReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 474; //421;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 content_type = 14; //6
  uint32 param = 9; //12
  uint32 add_progress = 2; //15
}

message AddQuestContentProgressRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 480; //403;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  int32 retcode = 8; //13
  uint32 content_type = 13; //4
}

message GetQuestTalkHistoryReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 470; //490;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 parent_quest_id = 5; //6
}

message GetQuestTalkHistoryRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 462; //473;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  repeated uint32 talk_id_list = 7; //13
  uint32 parent_quest_id = 13; //7
  int32 retcode = 8; //15
}

message QuestCreateEntityReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 414; //499;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 parent_quest_id = 4; //9
  bool is_rewind = 12; //3
  uint32 quest_id = 10; //2
  CreateEntityInfo entity = 11; //13
}

message QuestCreateEntityRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 424; //431;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 quest_id = 3; //13
  int32 retcode = 13; //8
  uint32 entity_id = 6; //7
  CreateEntityInfo entity = 12; //11
  uint32 parent_quest_id = 7; //1
  bool is_rewind = 14; //14
}

message QuestDestroyEntityReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 429; //475;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 scene_id = 13; //2
  uint32 entity_id = 10; //9
  uint32 quest_id = 12; //8
}

message QuestDestroyEntityRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 478; //448;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 quest_id = 13; //14
  uint32 scene_id = 15; //9
  uint32 entity_id = 9; //12
  int32 retcode = 8; //1
}

message ChapterStateNotify {
  message NeedPlayerLevel {
    bool is_limit = 14; //2
    uint32 config_need_player_level = 4; //11
  }

  message NeedBeginTime {
    uint32 config_need_begin_time = 5; //3
    bool is_limit = 4; //7
  }

  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 469; //405;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  ChapterState chapter_state = 13; //9
  NeedPlayerLevel need_player_level = 2; //10
  NeedBeginTime need_begin_time = 9; //1
  uint32 chapter_id = 15; //2
}

message QuestProgressUpdateNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 406; //482;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 quest_id = 9; //12
  repeated uint32 fail_progress_list = 11; //6
  repeated uint32 finish_progress_list = 1; //13
}

message QuestVarOp {
  uint32 index = 14; //9
  int32 value = 6; //5
  bool is_add = 5; //6
}

message QuestUpdateQuestVarReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 439; //447;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 parent_quest_id = 12; //9
  repeated QuestVarOp quest_var_op_list = 4; //4
  uint32 quest_id = 3; //11
  uint32 parent_quest_var_seq = 9; //1
}

message QuestUpdateQuestVarRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 446; //439;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  int32 retcode = 2; //10
  uint32 parent_quest_var_seq = 15; //2
  uint32 parent_quest_id = 4; //8
  uint32 quest_id = 9; //15
}

message QuestUpdateQuestVarNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 500; //453;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  repeated int32 quest_var = 7; //1
  uint32 parent_quest_id = 11; //12
  uint32 parent_quest_var_seq = 14; //8
}

message QuestDestroyNpcReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 492; //422;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 npc_id = 7; //1
  uint32 parent_quest_id = 4; //12
}

message QuestDestroyNpcRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 488; //465;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 npc_id = 4; //12
  uint32 parent_quest_id = 6; //4
  int32 retcode = 2; //5
}

message BargainSnapshot {
  uint32 expected_price = 6; //3
  int32 cur_mood = 13; //14
  uint32 price_low_limit = 10; //2
  uint32 bargain_id = 7; //5
}

message BargainStartNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 425; //404;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 bargain_id = 12; //4
  BargainSnapshot snapshot = 2; //2
}

message BargainOfferPriceReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 458; //493;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 bargain_id = 12; //4
  uint32 price = 7; //6
}

message BargainOfferPriceRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 418; //427;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  int32 retcode = 13; //5
  uint32 result_param = 11; //13
  BargainResultType bargain_result = 2; //14
  int32 cur_mood = 7; //6
}

message BargainTerminateNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 475; //494;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 bargain_id = 14; //15
}

message GetBargainDataReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 428; //488;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 bargain_id = 14; //12
}

message GetBargainDataRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 473; //426;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  int32 retcode = 14; //1
  uint32 bargain_id = 8; //14
  BargainSnapshot snapshot = 13; //13
}

message GetAllActivatedBargainDataReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 422; //463;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

}

message GetAllActivatedBargainDataRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 445; //495;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  repeated BargainSnapshot snapshot_list = 2; //5
  int32 retcode = 14; //9
}

message ServerCondMeetQuestListUpdateNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 485; //406;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  repeated uint32 del_quest_id_list = 7; //1
  repeated uint32 add_quest_id_list = 2; //12
}

message QuestGlobalVar {
  int32 value = 14; //8
  uint32 key = 9; //4
}

message QuestGlobalVarNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 451; //434;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  repeated QuestGlobalVar var_list = 12; //1
}

message QuestTransmitReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 442; //450;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 point_id = 3; //15
  uint32 quest_id = 10; //5
}

message QuestTransmitRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 450; //443;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 point_id = 8; //12
  int32 retcode = 7; //5
  uint32 quest_id = 5; //3
}

message PersonalLineAllDataReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 430; //474;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

}

message LockedPersonallineData {
  enum LockReason {
    LEVEL = 0;
    QUEST = 1;
  }

  LockReason lock_reason = 4; //2
  uint32 personal_line_id = 6; //13
  oneof param {
    uint32 chapter_id = 5; //3
    uint32 level = 13; //1
  }
}

message PersonalLineAllDataRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 443; //476;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 cur_finished_daily_task_count = 2; //5
  repeated uint32 can_be_unlocked_personal_line_list = 4; //13
  int32 retcode = 11; //15
  repeated uint32 ongoing_personal_line_list = 5; //8
  uint32 legendary_key_count = 7; //11
  repeated LockedPersonallineData locked_personal_line_list = 10; //10
}

message RedeemLegendaryKeyReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 435; //446;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

}

message RedeemLegendaryKeyRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 407; //441;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 legendary_key_count = 4; //11
  int32 retcode = 6; //14
}

message UnlockPersonalLineReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 452; //449;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 personal_line_id = 7; //4
}

message UnlockPersonalLineRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 403; //491;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  int32 retcode = 5; //4
  uint32 personal_line_id = 6; //10
  oneof param {
    uint32 level = 3; //11
    uint32 chapter_id = 14; //6
  }
}

message CancelFinishParentQuestNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 453; //424;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 parent_quest_id = 10; //6
}

message QuestUpdateQuestTimeVarNotify {

  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 436; //456;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  map<uint32, uint32> time_var_map = 8; //1
  uint32 parent_quest_id = 5; //3
}

message PersonalLineNewUnlockNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 494; //442;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  repeated uint32 personal_line_id_list = 11; //9
}

message NpcTalkStateNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 481; //430;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  bool is_ban = 1; //5
}

message GetQuestLackingResourceReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 464; //467;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 quest_id = 15; //4
}

message GetQuestLackingResourceRsp {


  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 483; //458;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 quest_id = 6; //4
  int32 retcode = 14; //11
  repeated uint32 lacked_npc_list = 15; //8
  repeated uint32 lacked_place_list = 9; //5
  map<uint32, uint32> lacked_npc_map = 3; //10
  map<uint32, uint32> lacked_place_map = 1; //2
}

message GetParentQuestVideoKeyReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 479; //470;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 parent_quest_id = 14; //15
}

message GetParentQuestVideoKeyRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 427; //417;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  int32 retcode = 9; //1
  uint64 video_key = 2; //14
  uint32 parent_quest_id = 11; //10
}

message ParentQuestInferenceDataNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 463; //402;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 parent_quest_id = 8; //2
  repeated InferencePageInfo inference_page_list = 11; //1
}

message InterpretInferenceWordReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 423; //419;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 word_id = 12; //2
  uint32 page_id = 10; //4
}

message InterpretInferenceWordRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 415; //461;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  int32 retcode = 13; //5
  uint32 word_id = 6; //14
  uint32 page_id = 2; //13
}

message AssociateInferenceWordReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 456; //429;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 base_word_id = 11; //7
  uint32 page_id = 3; //11
  uint32 associate_word_id = 13; //2
}

message AssociateInferenceWordRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 490; //457;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  int32 retcode = 13; //15
  uint32 base_word_id = 5; //14
  uint32 associate_word_id = 14; //13
  uint32 page_id = 11; //1
}

message SubmitInferenceWordReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 454; //500;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 word_id = 9; //4
  uint32 page_id = 13; //9
}

message SubmitInferenceWordRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 495; //416;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 word_id = 6; //2
  uint32 page_id = 13; //13
  uint32 conclusion_id = 7; //5
  int32 retcode = 8; //8
}

message QuestRenameAvatarReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 467; //487;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 rename_id = 9; //11
  bool is_check = 6; //8
  string avatar_name = 11; //2
}

message QuestRenameAvatarRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 401; //440;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  string avatar_name = 15; //15
  bool is_check = 2; //13
  uint32 rename_id = 13; //1
  int32 retcode = 10; //7
}

enum ChapterState {
  CHAPTER_STATE_INVALID = 0;
  CHAPTER_STATE_UNABLE_TO_BEGIN = 1;
  CHAPTER_STATE_BEGIN = 2;
  CHAPTER_STATE_END = 3;
}

enum BargainResultType {
  BARGAIN_COMPLETE_SUCC = 0;
  BARGAIN_SINGLE_FAIL = 1;
  BARGAIN_COMPLETE_FAIL = 2;
}

