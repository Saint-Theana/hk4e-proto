syntax = "proto3";

package proto;
option go_package = "./;proto";


import "define.proto";

message GalleryFlowerStartParam {
  uint32 target_score = 8; //5
}

message GalleryStartNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 5505; //5572;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 end_time = 1; //6
  uint32 player_count = 4; //11
  uint32 owner_uid = 14; //9
  uint32 gallery_id = 12; //13
  uint32 start_time = 3; //5
  oneof detail {
    GalleryFlowerStartParam flower_start_param = 10; //15
  }
}

message GalleryBalloonShootNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 5555; //5598;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 trigger_entity_id = 2; //12
  uint32 gallery_id = 8; //5
  uint32 combo = 7; //14
  uint64 combo_disable_time = 6; //6
  int32 add_score = 5; //11
  uint32 cur_score = 14; //13
}

message GalleryBalloonScoreNotify {

  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 5587; //5512;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 gallery_id = 2; //9
  map<uint32, uint32> uid_score_map = 12; //7
}

message BalloonSettleInfo {
  uint32 uid = 11; //3
  uint32 shoot_count = 3; //12
  uint32 max_combo = 14; //9
  uint32 final_score = 1; //7
  OnlinePlayerInfo player_info = 15; //2
}

message GalleryStopNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 5598; //5535;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 gallery_id = 3; //8
}

message FallSettleInfo {

  uint32 catch_count = 10; //15
  OnlinePlayerInfo player_info = 7; //13
  uint32 uid = 3; //14
  map<uint32, uint32> flower_ring_catch_count_map = 4; //3
  uint32 remain_time = 14; //10
  uint32 final_score = 9; //1
}

message GalleryFallCatchNotify {

  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 5520; //5507;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 cur_score = 5; //6
  uint32 time_cost = 1; //11
  map<uint32, uint32> ball_catch_count_map = 15; //15
  uint32 add_score = 4; //1
  bool is_ground = 3; //12
  uint32 gallery_id = 2; //10
}

message FallPlayerBrief {
  uint32 uid = 12; //13
  bool is_ground = 8; //5
  uint32 score = 13; //10
}

message GalleryFallScoreNotify {

  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 5574; //5521;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 gallery_id = 8; //7
  map<uint32, FallPlayerBrief> uid_brief_map = 4; //1
}

message BalloonPlayerInfo {
  uint32 uid = 10; //15
  uint32 cur_score = 13; //2
  uint32 combo_disable_time = 8; //14
  uint32 combo = 6; //11
}

message FallPlayerInfo {

  uint32 time_cost = 10; //11
  uint32 uid = 4; //9
  map<uint32, uint32> ball_catch_count_map = 8; //6
  uint32 cur_score = 11; //7
  bool is_ground = 15; //15
}

message SceneGalleryBalloonInfo {

  map<uint32, BalloonPlayerInfo> scene_player_balloon_info_map = 13; //14
  uint32 end_time = 7; //5
}

message SceneGalleryFallInfo {

  map<uint32, FallPlayerInfo> scene_player_fall_info_map = 9; //12
  uint32 end_time = 6; //2
}

message SceneGalleryFlowerInfo {
  uint32 end_time = 8; //7
  uint32 target_score = 6; //13
  uint32 cur_score = 7; //9
}

message SceneGalleryBulletInfo {

  uint32 end_time = 8; //1
  map<uint32, uint32> hit_count_map = 1; //10
}

message SceneGalleryBrokenFloorInfo {

  map<uint32, uint32> fall_count_map = 15; //3
  uint32 end_time = 10; //9
}

message SceneGalleryHideAndSeekInfo {
  repeated uint32 visible_uid_list = 5; //13
  repeated uint32 caught_uid_list = 7; //4
}

message SceneGalleryBuoyantCombatInfo {
  uint32 score = 12; //6
  uint32 kill_special_monster_count = 15; //1
  uint32 kill_monster_count = 3; //14
}

message SceneGalleryProgressInfo {
  repeated uint32 progress_stage_list = 8; //8
  string key = 1; //11
  uint32 progress = 13; //5
  uint32 ui_form = 2; //12
}

message SceneGalleryBounceConjuringInfo {
  uint32 total_destroyed_machine_count = 5; //4
  uint32 total_score = 4; //6
}

message SceneGalleryHandballInfo {
  PlaceInfo ball_place_info = 11; //9
  bool is_have_ball = 7; //15
}

message SceneGallerySumoInfo {
  uint32 score = 4; //2
  uint32 kill_normal_mosnter_num = 5; //15
  uint32 kill_elite_monster_num = 3; //14
}

message SceneGallerySalvagePreventInfo {
  uint32 monster_count = 2; //7
}

message SceneGallerySalvageEscortInfo {
  uint32 max_box_count = 6; //14
  uint32 max_monster_count = 4; //3
  uint32 box_count = 2; //7
  uint32 monster_count = 1; //11
}

message SceneGalleryCrystalLinkInfo {
  uint32 score = 6; //10
}

message SceneGalleryIrodoriMasterInfo {
  uint32 level_id = 13; //8
  uint32 difficulty = 12; //1
  bool is_cg_viewed = 6; //5
}

message SceneGalleryHomeBalloonInfo {
  uint32 score = 10; //7
}

message SceneGalleryLuminanceStoneChallengeInfo {
  uint32 kill_monster_count = 4; //5
  uint32 score = 15; //3
  uint32 clean_mud_count = 13; //2
  uint32 kill_special_monster_count = 7; //6
}

message SceneGalleryHomeSeekFurnitureInfo {

  uint32 cur_tide_left_num = 8; //6
  map<uint32, uint32> player_score_map = 12; //8
  uint32 cur_tide_duration_time = 10; //12
  uint32 cur_tide_total_num = 11; //9
}

message SceneGalleryIslandPartyDownHillInfo {
  uint32 total_kill_monster_count = 7; //14
  GalleryStartSource start_source = 4; //15
  uint32 max_kill_monster_count = 13; //5
  uint32 coin = 1; //13
}

message SceneGallerySummerTimeV2BoatInfo {
  uint32 param1 = 4; //15
  uint32 param3 = 10; //3
  uint32 used_time = 6; //11
  uint32 param2 = 5; //7
}

message SceneGalleryIslandPartyRaftInfo {
  uint32 coin = 10; //6
  GalleryStartSource start_source = 15; //7
  uint32 component = 7; //1
  uint32 fuel = 4; //15
  uint32 point_id = 13; //12
  uint32 raft_entity_id = 5; //4
}

message SceneGalleryIslandPartySailInfo {
  uint32 max_clean_progress = 11; //14
  uint32 clean_progress = 8; //10
  GalleryStartSource start_source = 1; //1
  uint32 kill_progress = 5; //11
  uint32 coin = 13; //15
  IslandPartySailStage stage = 14; //12
  uint32 max_kill_progress = 7; //8
}

message SceneGalleryInstableSprayBuffInfo {
  uint32 buff_id = 9; //6
  uint64 buff_end_time = 8; //9
  uint64 buff_max_time = 3; //4
}

message SceneGalleryInstaleSprayInfo {
  uint32 score = 13; //5
  repeated SceneGalleryInstableSprayBuffInfo buff_info_list = 6; //12
}

message SceneGalleryTreasureSeelieInfo {
  uint32 progress = 11; //15
  uint32 goal = 2; //14
}

message SceneGalleryWindFieldInfo {
  uint32 killed_monster_num = 13; //5
  uint32 challenge_ball_max_count = 9; //12
  uint32 show_id = 7; //15
  uint32 challenge_total_time = 8; //4
  uint32 challenge_ball_cur_count = 15; //9
  uint32 coin_num = 12; //1
  uint32 challenge_timestamp = 4; //13
  uint32 element_ball_num = 10; //10
}

message SceneGalleryFungusFighterTrainingInfo {
  uint32 max_monster_count = 1; //4
  uint32 killed_monster_count = 10; //9
  uint32 buff_start_time = 6; //13
  uint32 buff_id = 15; //1
  uint32 max_skill_count = 4; //10
  uint32 buff_last_time = 3; //14
  uint32 rest_skill_count = 5; //5
}

message SceneGalleryFungusFighterCaptureInfo {
  bool is_hide_progress = 3; //13
}

message SceneGalleryEffigyChallengeV2Info {
  uint32 killed_monster_cnt = 8; //10
  uint32 total_target_kill_cnt = 12; //15
  uint32 scene_start_time = 13; //14
  uint32 t_remain_use_time = 6; //6
  uint32 boss_violent_level = 5; //9
}

message SceneGalleryCharAmusementInfo {
  bool is_last_level = 10; //2
  uint32 max_score = 8; //9
  uint32 cur_score = 12; //14
  bool is_finish = 5; //10
  bool is_success = 7; //1
}

message SceneGalleryBrickBreakerInfo {
  uint32 score = 10; //nah
  uint32 life_count = 4; //nah
  uint32 fever = 2; //nah
  uint32 combo = 1; //nah
}

message SceneGalleryCoinCollectInfo {
  uint32 coin_total_num = 11; //4
  uint32 coin_collect_num = 9; //2
}

message SceneGalleryTeamChainInfo {
  uint32 gallery_score_end_time = 7; //14
  uint32 cur_total_score = 1; //7
  uint32 cur_gallery_idx = 8; //3
  uint32 total_target_kill_cnt = 4; //10
  uint32 killed_monster_cnt = 3; //12
}

message SceneGalleryInfo {
  GalleryStageType stage = 2; //5
  repeated SceneGalleryProgressInfo progress_info_list = 12; //4
  uint32 gallery_id = 3; //2
  uint32 start_time = 5; //3
  uint32 end_time = 15; //11
  uint32 owner_uid = 7; //9
  uint32 player_count = 11; //1
  uint32 pre_start_end_time = 8; //15
  oneof info {
    SceneGalleryBalloonInfo balloon_info = 14; //14
    SceneGalleryFallInfo fall_info = 1; //7
    SceneGalleryFlowerInfo flower_info = 6; //8
    SceneGalleryBulletInfo bullet_info = 10; //13
    SceneGalleryBrokenFloorInfo broken_floor_info = 9; //10
    SceneGalleryHideAndSeekInfo hide_and_seek_info = 13; //6
    SceneGalleryBuoyantCombatInfo buoyant_combat_info = 461; //1384
    SceneGalleryBounceConjuringInfo bounce_conjuring_info = 403; //708
    SceneGalleryHandballInfo handball_info = 1637; //1997
    SceneGallerySumoInfo sumo_info = 1000; //811
    SceneGallerySalvagePreventInfo salvage_prevent_info = 521; //1700
    SceneGallerySalvageEscortInfo salvage_escort_info = 33; //759
    SceneGalleryHomeBalloonInfo home_balloon_info = 1858; //1034
    SceneGalleryCrystalLinkInfo crystal_link_info = 177; //2004
    SceneGalleryIrodoriMasterInfo irodori_master_info = 1317; //1953
    SceneGalleryLuminanceStoneChallengeInfo luminance_stone_challenge_info = 401; //106
    SceneGalleryHomeSeekFurnitureInfo home_seek_furniture_info = 530; //1456
    SceneGalleryIslandPartyDownHillInfo island_party_down_hill_info = 1026; //462
    SceneGallerySummerTimeV2BoatInfo summer_time_v2_boat_info = 1460; //296
    SceneGalleryIslandPartyRaftInfo island_party_raft_info = 294; //1805
    SceneGalleryIslandPartySailInfo island_party_sail_info = 592; //1133
    SceneGalleryInstaleSprayInfo instable_spray_info = 127; //1196
    SceneGalleryMuqadasPotionInfo muqadas_potion_info = 615; //865
    SceneGalleryTreasureSeelieInfo treasure_seelie_info = 1420; //1525
    SceneGalleryVintageHuntingInfo vintage_hunting_info = 1361; //254
    SceneGalleryWindFieldInfo wind_field_info = 1448; //1080
    SceneGalleryFungusFighterTrainingInfo fungus_fighter_training_info = 291; //1328
    SceneGalleryEffigyChallengeV2Info effigy_challenge_info = 290; //882
    SceneGalleryFungusFighterCaptureInfo fungus_fighter_capture_info = 1362; //422
    SceneGalleryCharAmusementInfo char_amusement_info = 1649; //1086
    SceneGalleryBrickBreakerInfo brick_breaker_info = 1425; //nah
    SceneGalleryCoinCollectInfo coin_collect_info = 963; //1574
    SceneGalleryTeamChainInfo team_chain_info = 990; //1495
  }
}

message GetAllSceneGalleryInfoReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 5580; //5503;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

}

message GetAllSceneGalleryInfoRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 5570; //5590;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  repeated SceneGalleryInfo gallery_info_list = 8; //12
  int32 retcode = 14; //2
}

message GalleryFlowerCatchNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 5562; //5573;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 cur_score = 8; //12
  uint32 add_score = 1; //14
  uint32 gallery_id = 13; //5
}

message GalleryPreStartNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 5514; //5599;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 gallery_id = 7; //10
  uint32 pre_start_end_time = 6; //9
}

message GalleryBulletHitNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 5524; //5531;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 hit_count = 11; //14
  uint32 gallery_id = 10; //12
}

message GalleryBrokenFloorFallNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 5529; //5575;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 fall_count = 2; //3
  uint32 gallery_id = 6; //5
}

message InterruptGalleryReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 5578; //5548;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 gallery_id = 2; //13
}

message InterruptGalleryRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 5516; //5597;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  int32 retcode = 15; //12
  uint32 gallery_id = 9; //9
}

message SceneGalleryInfoNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 5513; //5581;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  SceneGalleryInfo gallery_info = 7; //4
}

message BuoyantCombatGallerySettleInfo {
  uint32 gallery_level = 8; //12
  uint32 final_score = 6; //15
  uint32 kill_monster_count = 10; //9
  uint32 kill_target_count = 9; //1
  uint32 kill_special_monster_count = 4; //4
  uint32 gallery_id = 14; //2
  uint32 gallery_multiple = 2; //11
}

message BounceConjuringGallerySettleInfo {

  OnlinePlayerInfo player_info = 11; //14
  uint32 destroyed_machine_count = 4; //5
  uint32 fever_count = 9; //6
  uint32 normal_hit_count = 8; //4
  float damage = 5; //11
  map<uint32, uint32> gadget_count_map = 3; //15
  uint32 score = 7; //12
  uint32 perfect_hit_count = 2; //8
  repeated ExhibitionDisplayInfo card_list = 15; //7
}

message GalleryBounceConjuringHitNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 5569; //5505;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 add_score = 14; //8
  bool is_perfect = 15; //5
  uint32 gallery_id = 7; //10
}

message GallerySumoKillMonsterNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 5506; //5582;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 kill_normal_mosnter_num = 13; //4
  uint32 score = 2; //7
  uint32 kill_elite_monster_num = 4; //14
  uint32 gallery_id = 10; //11
}

message GalleryCrystalLinkKillMonsterNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 5539; //5547;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 score = 9; //7
  uint32 gallery_id = 10; //9
}

message GalleryCrystalLinkBuffInfoNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 5546; //5539;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 gallery_id = 6; //13
  bool is_buff_valid = 11; //11
  uint32 buff_id = 2; //14
}

message FishInfo {
  uint32 free_count = 4; //11
  uint32 into_bag_count = 6; //12
}

message FishingScore {
  uint32 fishing_score = 10; //2
  bool is_new_record = 13; //4
}

message FishingGallerySettleInfo {

  map<uint32, FishInfo> fish_map = 9; //11
  repeated FishingScore fishing_score_list = 4; //15
}

message RacingGallerySettleInfo {
  uint32 winner_uid = 10; //6
  GalleryStopReason reason = 3; //4
  uint32 use_time = 9; //1
}

message SalvagePreventGallerySettleInfo {
  uint32 time_remain = 10; //8
  SalvagePreventStopReason reason = 2; //7
  uint32 final_score = 6; //13
  uint32 monster_count = 3; //15
}

message SalvageEscortGallerySettleInfo {
  uint32 time_remain = 8; //14
  SalvageEscortStopReason reason = 6; //7
}

message BalloonGallerySettleInfo {
  uint32 score = 6; //8
  GalleryStopReason reason = 15; //14
  uint32 hit_count = 3; //10
  uint32 owner_uid = 5; //6
}

message IrodoriMasterGallerySettleInfo {
  GalleryStopReason reason = 6; //15
  bool is_finish = 14; //11
  uint32 finish_time = 15; //14
  uint32 difficult = 10; //6
  uint32 level_id = 7; //4
}

message PhotoGallerySettleInfo {
  GalleryStopReason reason = 3; //7
}

message LuminanceStoneChallengeGallerySettleInfo {
  uint32 kill_monster_count = 6; //12
  uint32 kill_special_monster_count = 4; //8
  uint32 clean_mud_count = 15; //10
  uint32 gallery_id = 11; //2
  GalleryStopReason reason = 9; //11
  uint32 final_score = 5; //13
}

message HomeGalleryInPlayingNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 5600; //5553;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 gallery_id = 12; //13
}

message SummerTimeV2BoatGallerySettleInfo {
  uint32 param1 = 6; //7
  uint32 param2 = 15; //2
  GalleryStopReason reason = 3; //3
  uint32 param3 = 8; //6
  uint32 used_time = 4; //12
  uint32 gallery_id = 5; //1
}

message GalleryIslandPartyDownHillInfoNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 5592; //5522;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 gallery_id = 7; //2
  uint32 coin = 12; //9
  uint32 total_kill_monster_count = 15; //11
}

message IslandPartyRaftInfoNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 5588; //5565;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 point_id = 6; //7
  uint32 coin = 5; //15
  uint32 fuel = 9; //3
  uint32 component = 12; //13
}

message IslandPartySailInfoNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 5525; //5504;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 coin = 1; //10
  IslandPartySailStage stage = 2; //8
  uint32 kill_monster_count = 9; //4
  uint32 progress = 5; //15
}

message IslandPartyGallerySettleInfo {
  OnlinePlayerInfo player_info = 3; //13
  repeated ExhibitionDisplayInfo card_list = 9; //11
}

message BackRebornGalleryReq {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 5558; //5593;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
    IS_ALLOW_CLIENT = 1;
  }

  uint32 gallery_id = 5; //15
}

message BackRebornGalleryRsp {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 5518; //5527;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 gallery_id = 3; //9
  int32 retcode = 14; //5
}

message GalleryWillStartCountdownNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 5575; //5594;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  GalleryStartSource start_source = 13; //11
  uint32 end_time = 9; //12
  bool is_end = 1; //7
  uint32 gallery_id = 8; //14
}

message InstableSprayGalleryInfoNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 5528; //5588;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 score = 8; //3
}

message SceneGalleryMuqadasPotionInfo {
  uint32 score = 14; //6
  uint32 capture_weakness_count = 5; //4
  uint32 skill_energy = 3; //10
  uint32 skill_use_limit = 13; //9
}

message VintageHuntingFirstStageInfo {
  uint32 timid_cnt = 12; //15
  uint32 brutal_cnt = 14; //7
  uint32 score = 15; //14
  uint32 elite_cnt = 1; //11
}

message VintageHuntingSecondStageInfo {
  uint32 total_num = 15; //11
  uint32 capture_animal_num = 11; //13
  uint32 left_num = 14; //3
}

message VintageHuntingThirdStageInfo {
}

message SceneGalleryVintageHuntingInfo {
  uint32 stage_id = 2; //7
  oneof info {
    VintageHuntingFirstStageInfo first_stage_info = 14; //2
    VintageHuntingSecondStageInfo second_stage_info = 11; //15
    VintageHuntingThirdStageInfo third_stage_info = 9; //12
  }
}

message WindFieldGalleryInfoNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 5573; //5526;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 show_id = 13; //3
  uint32 killed_monster_num = 3; //7
  uint32 coin_num = 1; //9
  uint32 challenge_ball_max_count = 15; //1
  uint32 challenge_total_time = 11; //5
  uint32 challenge_ball_cur_count = 5; //10
  uint32 challenge_timestamp = 4; //4
  uint32 element_ball_num = 9; //14
}

message WindFieldGalleryChallengeInfoNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 5522; //5563;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 challenge_timestamp = 15; //6
  bool is_start = 10; //8
  uint32 show_id = 9; //12
  bool is_success = 12; //7
  uint32 challenge_total_time = 3; //13
  uint32 challenge_ball_max_count = 5; //11
  uint32 challenge_ball_cur_count = 13; //1
}

message FungusFighterTrainingInfoNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 5545; //5595;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 buff_start_time = 13; //3
  uint32 max_skill_count = 14; //7
  uint32 max_monster_count = 3; //8
  uint32 buff_id = 6; //14
  uint32 buff_last_time = 15; //4
  uint32 rest_skill_count = 7; //6
  uint32 killed_monster_count = 1; //15
}

message FungusFighterTrainingSettleInfo {
  uint32 used_time = 6; //15
  GalleryStopReason reason = 13; //3
  string transaction = 5; //1
}

message FungusCaptureSettleNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 5585; //5506;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  bool is_success = 4; //2
}

message HideAndSeekPlayerCapturedNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 5551; //5534;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 ghost_skill_id = 13; //12
}

message CoinCollectGallerySettleNotify {
  enum CmdId {
    option allow_alias = true;
    NONE = 0;
    CMD_ID = 5542; //5550;
    ENET_CHANNEL_ID = 0;
    ENET_IS_RELIABLE = 1;
  }

  uint32 coin_collect_num = 14; //11
  uint32 coin_total_num = 6; //7
  uint32 level_id = 1; //9
  uint32 coin_collect_time = 15; //4
  uint32 multistage_play_index = 10; //6
  bool is_new_record = 8; //10
}

enum GalleryStageType {
  GALLERY_NONE = 0;
  GALLERY_PRESTART = 1;
  GALLERY_START = 2;
}

enum GalleryStopReason {
  GALLERY_STOP_NONE = 0;
  GALLERY_STOP_TIMEUP = 1;
  GALLERY_STOP_CLIENT_INTERRUPT = 2;
  GALLERY_STOP_LUA_INTERRUPT_SUCCESS = 3;
  GALLERY_STOP_LUA_INTERRUPT_FAIL = 4;
  GALLERY_STOP_OWNER_LEAVE_SCENE = 5;
  GALLERY_STOP_PLAY_INIT_FAILED = 6;
  GALLERY_STOP_OTHER_PLAYER_ENTER = 7;
  GALLERY_STOP_AVATAR_DIE = 8;
  GALLERY_STOP_FINISHED = 9;
  GALLERY_STOP_FUNGUS_ALL_DIE = 10;
  GALLERY_STOP_LIFE_COUNT_ZERO = 11;
}

enum GalleryStartSource {
  GALLERY_START_BY_NONE = 0;
  GALLERY_START_BY_MATCH = 1;
  GALLERY_START_BY_DRAFT = 2;
}

enum SalvagePreventStopReason {
  SALVAGE_PREVENT_STOP_NONE = 0;
  SALVAGE_PREVENT_STOP_SUCCESS = 1;
  SALVAGE_PREVENT_STOP_ARRIVAL = 2;
  SALVAGE_PREVENT_STOP_INTERRUPT = 3;
  SALVAGE_PREVENT_STOP_LEAVE = 4;
  SALVAGE_PREVENT_STOP_FULL = 5;
  SALVAGE_PREVENT_STOP_AWAY = 6;
}

enum SalvageEscortStopReason {
  SALVAGE_ESCORT_STOP_NONE = 0;
  SALVAGE_ESCORT_STOP_SUCCESS = 1;
  SALVAGE_ESCORT_STOP_DUMP = 2;
  SALVAGE_ESCORT_STOP_TIME = 3;
  SALVAGE_ESCORT_STOP_INTERRUPT = 4;
  SALVAGE_ESCORT_STOP_LEAVE = 5;
  SALVAGE_ESCORT_STOP_FULL = 6;
}

enum IslandPartySailStage {
  ISLAND_PARTY_SAIL_STAGE_NONE = 0;
  ISLAND_PARTY_SAIL_STAGE_SAIL = 1;
  ISLAND_PARTY_SAIL_STAGE_BATTLE = 2;
}

